# Generated by Django 4.2.21 on 2025-06-05 15:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shared', '0002_nurse'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HealthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_id', models.CharField(max_length=50, unique=True)),
                ('record_type', models.CharField(choices=[('CONSULTATION', 'Consultation'), ('DIAGNOSIS', 'Diagnosis'), ('TREATMENT', 'Treatment'), ('SURGERY', 'Surgery'), ('LAB_RESULT', 'Laboratory Result'), ('IMAGING', 'Medical Imaging'), ('VACCINATION', 'Vaccination'), ('ALLERGY', 'Allergy Record'), ('MEDICATION', 'Medication Record'), ('VITAL_SIGNS', 'Vital Signs'), ('EMERGENCY', 'Emergency Visit'), ('DISCHARGE', 'Discharge Summary')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('clinical_notes', models.TextField(blank=True)),
                ('chief_complaint', models.TextField(blank=True)),
                ('diagnosis', models.TextField(blank=True)),
                ('treatment_plan', models.TextField(blank=True)),
                ('follow_up_instructions', models.TextField(blank=True)),
                ('privacy_level', models.CharField(choices=[('PUBLIC', 'Public'), ('RESTRICTED', 'Restricted'), ('CONFIDENTIAL', 'Confidential'), ('SECRET', 'Secret')], default='RESTRICTED', max_length=20)),
                ('service_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('authorized_users', models.ManyToManyField(blank=True, related_name='authorized_records', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_health_records', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_records', to='shared.doctor')),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modified_health_records', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_records', to='shared.patient')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'health_records',
                'ordering': ['-service_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VitalSigns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('systolic_bp', models.PositiveIntegerField(help_text='Systolic Blood Pressure (mmHg)', validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(300)])),
                ('diastolic_bp', models.PositiveIntegerField(help_text='Diastolic Blood Pressure (mmHg)', validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(200)])),
                ('heart_rate', models.PositiveIntegerField(help_text='Heart Rate (beats per minute)', validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(250)])),
                ('respiratory_rate', models.PositiveIntegerField(help_text='Respiratory Rate (breaths per minute)', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(60)])),
                ('temperature', models.DecimalField(decimal_places=1, help_text='Body Temperature (Â°F)', max_digits=4, validators=[django.core.validators.MinValueValidator(90.0), django.core.validators.MaxValueValidator(115.0)])),
                ('oxygen_saturation', models.PositiveIntegerField(help_text='Oxygen Saturation (%)', validators=[django.core.validators.MinValueValidator(70), django.core.validators.MaxValueValidator(100)])),
                ('height_cm', models.PositiveIntegerField(blank=True, help_text='Height in centimeters', null=True, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(300)])),
                ('weight_kg', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kilograms', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(500.0)])),
                ('bmi', models.DecimalField(blank=True, decimal_places=1, help_text='Body Mass Index (calculated)', max_digits=4, null=True)),
                ('blood_glucose', models.PositiveIntegerField(blank=True, help_text='Blood Glucose (mg/dL)', null=True, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(800)])),
                ('pain_scale', models.PositiveIntegerField(blank=True, help_text='Pain Scale (0-10)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('measured_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('health_record', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vital_signs', to='records.healthrecord')),
                ('measured_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measured_vitals', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vital_signs', to='shared.patient')),
            ],
            options={
                'db_table': 'vital_signs',
                'ordering': ['-measured_at'],
            },
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_name', models.CharField(max_length=200)),
                ('icd_code', models.CharField(blank=True, help_text='ICD-10 Code', max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('RESOLVED', 'Resolved'), ('CHRONIC', 'Chronic'), ('FAMILY_HISTORY', 'Family History')], max_length=20)),
                ('diagnosed_date', models.DateField(blank=True, null=True)),
                ('resolved_date', models.DateField(blank=True, null=True)),
                ('severity', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('family_relation', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shared.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_history', to='shared.patient')),
            ],
            options={
                'db_table': 'medical_history',
                'ordering': ['-diagnosed_date'],
            },
        ),
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allergen_name', models.CharField(max_length=200)),
                ('allergen_type', models.CharField(choices=[('MEDICATION', 'Medication'), ('FOOD', 'Food'), ('ENVIRONMENTAL', 'Environmental'), ('LATEX', 'Latex'), ('INSECT', 'Insect'), ('OTHER', 'Other')], max_length=20)),
                ('severity', models.CharField(choices=[('MILD', 'Mild'), ('MODERATE', 'Moderate'), ('SEVERE', 'Severe'), ('LIFE_THREATENING', 'Life Threatening')], max_length=20)),
                ('reaction_description', models.TextField()),
                ('symptoms', models.TextField(blank=True)),
                ('treatment_notes', models.TextField(blank=True)),
                ('first_occurrence_date', models.DateField(blank=True, null=True)),
                ('last_occurrence_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allergies', to='shared.patient')),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'allergies',
                'ordering': ['-severity', 'allergen_name'],
            },
        ),
    ]
