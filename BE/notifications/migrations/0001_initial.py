# Generated by Django 4.2.21 on 2025-06-06 08:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import notifications.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('APPOINTMENT', 'Appointment'), ('PRESCRIPTION', 'Prescription'), ('LAB_RESULT', 'Lab Result'), ('BILLING', 'Billing'), ('SYSTEM', 'System'), ('REMINDER', 'Reminder'), ('ALERT', 'Alert'), ('MESSAGE', 'Message'), ('EMERGENCY', 'Emergency')], max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('NORMAL', 'Normal'), ('HIGH', 'High'), ('URGENT', 'Urgent'), ('CRITICAL', 'Critical')], default='NORMAL', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('action_url', models.URLField(blank=True, help_text='URL to navigate when notification is clicked')),
                ('action_text', models.CharField(blank=True, help_text='Text for action button', max_length=100)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_delivered', models.BooleanField(default=False)),
                ('delivery_method', models.CharField(choices=[('IN_APP', 'In-App Notification'), ('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification'), ('PHONE', 'Phone Call')], default='IN_APP', max_length=10)),
                ('delivery_attempts', models.PositiveIntegerField(default=0)),
                ('last_delivery_attempt', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('scheduled_for', models.DateTimeField(blank=True, help_text='When to send this notification', null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this notification expires', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=notifications.models.default_empty_dict, help_text='Additional data for notification')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('template_type', models.CharField(choices=[('APPOINTMENT_REMINDER', 'Appointment Reminder'), ('APPOINTMENT_CONFIRMATION', 'Appointment Confirmation'), ('APPOINTMENT_CANCELLATION', 'Appointment Cancellation'), ('LAB_RESULT_READY', 'Lab Result Ready'), ('PRESCRIPTION_READY', 'Prescription Ready'), ('BILL_GENERATED', 'Bill Generated'), ('PAYMENT_RECEIVED', 'Payment Received'), ('MEDICATION_REMINDER', 'Medication Reminder'), ('FOLLOW_UP_REMINDER', 'Follow-up Reminder'), ('WELCOME_MESSAGE', 'Welcome Message'), ('PASSWORD_RESET', 'Password Reset'), ('EMERGENCY_ALERT', 'Emergency Alert')], max_length=30, unique=True)),
                ('notification_type', models.CharField(choices=[('APPOINTMENT', 'Appointment'), ('PRESCRIPTION', 'Prescription'), ('LAB_RESULT', 'Lab Result'), ('BILLING', 'Billing'), ('SYSTEM', 'System'), ('REMINDER', 'Reminder'), ('ALERT', 'Alert'), ('MESSAGE', 'Message'), ('EMERGENCY', 'Emergency')], max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('NORMAL', 'Normal'), ('HIGH', 'High'), ('URGENT', 'Urgent'), ('CRITICAL', 'Critical')], default='NORMAL', max_length=10)),
                ('title_template', models.CharField(help_text='Use {variable} for dynamic content', max_length=200)),
                ('message_template', models.TextField(help_text='Use {variable} for dynamic content')),
                ('action_text', models.CharField(blank=True, max_length=100)),
                ('action_url_template', models.CharField(blank=True, max_length=500)),
                ('delivery_methods', models.JSONField(default=notifications.models.default_empty_list, help_text="List of delivery methods: ['IN_APP', 'EMAIL', 'SMS']")),
                ('send_immediately', models.BooleanField(default=True)),
                ('delay_minutes', models.PositiveIntegerField(default=0, help_text='Delay before sending')),
                ('available_variables', models.JSONField(default=notifications.models.default_empty_list, help_text='List of available variables for this template')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'notification_templates',
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_reminders', models.BooleanField(default=True)),
                ('appointment_confirmations', models.BooleanField(default=True)),
                ('appointment_cancellations', models.BooleanField(default=True)),
                ('appointment_delivery_methods', models.JSONField(default=notifications.models.default_appointment_delivery)),
                ('lab_results', models.BooleanField(default=True)),
                ('prescription_ready', models.BooleanField(default=True)),
                ('medication_reminders', models.BooleanField(default=True)),
                ('medical_delivery_methods', models.JSONField(default=notifications.models.default_medical_delivery)),
                ('billing_notifications', models.BooleanField(default=True)),
                ('payment_confirmations', models.BooleanField(default=True)),
                ('billing_delivery_methods', models.JSONField(default=notifications.models.default_billing_delivery)),
                ('system_updates', models.BooleanField(default=True)),
                ('security_alerts', models.BooleanField(default=True)),
                ('system_delivery_methods', models.JSONField(default=notifications.models.default_system_delivery)),
                ('emergency_alerts', models.BooleanField(default=True, editable=False)),
                ('emergency_delivery_methods', models.JSONField(default=notifications.models.default_emergency_delivery)),
                ('do_not_disturb_start', models.TimeField(blank=True, help_text='Start of quiet hours', null=True)),
                ('do_not_disturb_end', models.TimeField(blank=True, help_text='End of quiet hours', null=True)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notification_preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_method', models.CharField(choices=[('IN_APP', 'In-App Notification'), ('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification'), ('PHONE', 'Phone Call')], max_length=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('FAILED', 'Failed'), ('BOUNCED', 'Bounced'), ('SPAM', 'Marked as Spam')], max_length=20)),
                ('recipient_address', models.CharField(help_text='Email, phone number, etc.', max_length=200)),
                ('provider', models.CharField(blank=True, help_text='Email service, SMS provider, etc.', max_length=100)),
                ('external_id', models.CharField(blank=True, help_text="Provider's message ID", max_length=200)),
                ('response_code', models.CharField(blank=True, max_length=20)),
                ('response_message', models.TextField(blank=True)),
                ('error_details', models.TextField(blank=True)),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_logs', to='notifications.notification')),
            ],
            options={
                'db_table': 'notification_logs',
                'ordering': ['-attempted_at'],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'is_read'], name='notificatio_recipie_583549_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', 'priority'], name='notificatio_notific_5536b0_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['scheduled_for'], name='notificatio_schedul_3d00b6_idx'),
        ),
    ]
